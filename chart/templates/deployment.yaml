apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
spec:
  revisionHistoryLimit: 0
  replicas: 1
  strategy:
    type: {{ .Values.deployment.updateStrategy }}
  selector:
    matchLabels:
      {{- range $k, $v := .Values.deployment.labels }}
      {{ $k }}: {{ $v }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- range $k, $v := .Values.deployment.labels }}
        {{ $k }}: {{ $v }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.deployment.name }}
          image: {{ .Values.deployment.image }}:{{ .Values.appVersion }}
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Values.secret.name }}
          env:
            - name: STATE_REDIS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: username
            - name: STATE_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: STATE_REDIS_HOST
              value: "redis.prep-redis-state"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          resources: {{ $.Values.resources | toJson }}
