apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
spec:
  revisionHistoryLimit: 0
  strategy:
    type: {{ .Values.deployment.updateStrategy }}
  selector:
    matchLabels:
      {{- range $k, $v := .Values.deployment.labels }}
      {{ $k }}: {{ $v }}
      {{- end }}
  template:
    metadata:
      labels:
        {{- range $k, $v := .Values.deployment.labels }}
        {{ $k }}: {{ $v }}
        {{- end }}
    spec:
      serviceAccountName: {{ .Release.Name }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: {{ .Values.deployment.name }}
          image: {{ .Values.deployment.image }}:{{ .Values.appVersion }}
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          envFrom:
            - secretRef:
                name: {{ .Values.secret.name }}
          env:
            - name: STATE__REDIS__USERNAME
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: username
            - name: STATE__REDIS__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis-credentials
                  key: password
            - name: STATE__REDIS__HOST
              value: "redis.prep-redis-state"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          resources: {{ $.Values.resources | toJson }}
---
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ .Values.deployment.name }}
spec:
  maxReplicaCount: 1
  minReplicaCount: 0
  scaleTargetRef:
    name: {{ .Values.deployment.name }}
  triggers:
    - type: nats-jetstream
      metadata:
        natsServerMonitoringEndpoint: "nats-headless.nats-system.svc.cluster.local:8222"
        account: "$G"
        stream: "telegram-updates"
        consumer: "station-bot"
